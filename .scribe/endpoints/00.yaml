name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route laravel-crud-api/public//api/user could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aeED6V4vkbc5gP18d6fZha3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: m
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: brice.howell@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: tLzJS(C
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: m
      email: brice.howell@example.com
      password: tLzJS(C
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 54PVhZgaD38f1b6dacE6vek'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: kling.salvatore@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: kling.salvatore@example.net
      password: quia
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer d6VhPa6483k5fv1DgcZbEae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cavDEa14d5gk6efhZbV683P'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/tasks
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route laravel-crud-api/public//api/tasks could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer P4ba5318ahd6DkVZve6cfEg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/tasks
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: vpalbnlyqni
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Nemo eum asperiores voluptatem vitae explicabo explicabo aut.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: in_progress
        type: string
        enumValues:
          - pending
          - in_progress
          - completed
        exampleWasSpecified: false
        custom: []
      due_date:
        name: due_date
        description: 'Must be a valid date.'
        required: false
        example: '2024-10-11T12:34:51'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      priority:
        name: priority
        description: 'Must be at least 1. Must not be greater than 5.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: vpalbnlyqni
      description: 'Nemo eum asperiores voluptatem vitae explicabo explicabo aut.'
      status: in_progress
      due_date: '2024-10-11T12:34:51'
      priority: 5
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer d5f3vgE8aecP6a4Vk1Zh6bD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tasks/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route laravel-crud-api/public//api/tasks/1 could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6Z5bVEecha18gda64kv3fPD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/tasks/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: xfzr
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Asperiores qui aut dicta sed eveniet et doloribus.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: pending
        type: string
        enumValues:
          - pending
          - in_progress
          - completed
        exampleWasSpecified: false
        custom: []
      due_date:
        name: due_date
        description: 'Must be a valid date.'
        required: false
        example: '2024-10-11T12:34:51'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      priority:
        name: priority
        description: 'Must be at least 1. Must not be greater than 5.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: xfzr
      description: 'Asperiores qui aut dicta sed eveniet et doloribus.'
      status: pending
      due_date: '2024-10-11T12:34:51'
      priority: 4
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aV16kPc34f6hgvED8aZ5bde'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tasks/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cbaghfdVEDea14kP68Zv635'
    controller: null
    method: null
    route: null
    custom: []
